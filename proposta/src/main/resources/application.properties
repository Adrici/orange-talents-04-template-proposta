spring.datasource.url=jdbc:mysql://localhost/nova_proposta?createDatabaseIfNotExist=true&serverTimezone=UTC&useSSl=false
spring.datasource.username=root
spring.datasource.password=x123x

spring.datasource.testWhileIdle=true
spring.datasource.validationQuery=SELECT 1

spring.jpa.show-sql=false
spring.jpa.hibernate.ddl-auto=update
spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImproveNamingStrategy

analise.host=${ANALISES_URL:http://localhost:9999/api/solicitacao}

cartao.host=${CARTOES_URL:http://localhost:8888}

atualizacao.scheduler = 10000

## spring security resource server configuration
spring.security.oauth2.resourceserver.jwt.issuer-uri=${KEYCLOAK_ISSUER_URI:http://localhost:18080/auth/realms/nosso-cartao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${KEYCLOAK_JWKS_URI:http://localhost:18080/auth/realms/nosso-cartao/protocol/openid-connect/certs}

# Actuator e Prometheus (health e metricas)
management.endpoints.web.exposure.include=info,health,prometheus
management.endpoint.health.show-details=always
management.health.probes.enabled=true
management.endpoints.prometheus.enabled=true
management.metrics.tags.aplicacao=${NOME_DA_APLICACAO:proposta}
management.metrics.tags.ambiente=${AMBIENTE:desenvolvimento}

##<!--JAERGAR-->
# Habilita ou não
opentracing.jaeger.enabled=${JAEGER_ENABLED:true}
# Nome-Serviço
opentracing.jaeger.service-name=${spring.application.name:proposta}
# Endereço - metadados (trace, span, outros)
opentracing.jaeger.http-sender.url=${JAEGER_ENDPOINT:http://localhost:14268/api/traces}
# Tipo - amostragem  - probabilístico - configuração (1 = 100%)
opentracing.jaeger.probabilistic-sampler.sampling-rate=${JAEGER_SAMPLER:1}

# Ofuscador
proposta.ofuscar.dados=${PASSWORD:pass} 

